{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/data.service.ts","./src/app/gaurd/auth.guard.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/model/user.model.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './gaurd/auth.guard';\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent, canActivate: [AuthGuard] },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui';\n\n\n\n  constructor() {\n  }\n\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../model/user.model';\nimport { Response } from '../model/response.module';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private loginService: UserService, private cookieService: CookieService,\n              private router: Router, private dataService: DataService) { }\n\n  user = new User();\n  loginerror = false;\n  userType: boolean;\n  userList: User[];\n  userId: any;\n\n  ngOnInit(): void {\n    if (this.cookieService.get('userType') === 'admin') {\n      this.userType = true;\n      this.loginService.getAllClientList().subscribe((response: any) => {\n        if (response != null) {\n          this.userList = response;\n        } else {\n          this.loginerror = true;\n        }\n      });\n    } else {\n      if (this.cookieService.get('domainName') != null) {\n        this.user.client = this.cookieService.get('domainName');\n        this.loginService.getUserListByClient(this.user).subscribe((response: any) => {\n          if (response != null) {\n            this.userList = response;\n          } else {\n            this.loginerror = true;\n          }\n        });\n      }\n    }\n  }\n\n  resetPassword(editUser: User) {\n    this.dataService.sharedData = editUser;\n    this.dataService.edit = true;\n    this.router.navigate(['/register']);\n  }\n\n  deleteUser(index: number) {\n    this.userId = this.userList[index].id;\n    if (this.cookieService.get('userType') === 'admin') {\n      this.loginService.deleteClientUser(this.userId).subscribe((response: Response) => {\n        if (response != null && response.result === 'success') {\n          const data = this.userList;\n          data.splice(index, 1);\n          this.userList = data;\n        }\n      });\n    } else {\n      this.loginService.deleteUser(this.userId).subscribe((response: Response) => {\n        if (response != null && response.result === 'success') {\n          const data = this.userList;\n          data.splice(index, 1);\n          this.userList = data;\n        }\n      });\n    }\n  }\n\n  logout() {\n    this.cookieService.deleteAll();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-light bg-light\" *ngIf=\"user\">\n  <div class=\"navbar-nav\">\n    <a class=\"nav-item nav-link\" routerLink=\"/dashboard\">\n      <img src=\"../../assets/images/logo.png\" alt=\"\">\n    </a>\n\n  </div>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"nav navbar-nav ml-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-item nav-link ml-auto logout\" (click)=\"logout()\">Logout</a>\n      </li>\n\n    </ul>\n  </div>\n</nav>\n\n\n<div class=\"container\">\n  <div>\n    <div class=\"row\">\n      <div class=\"col-9\">\n        <h1 *ngIf=\"userType\">Client List</h1>\n        <h1 *ngIf=\"!userType\">User List</h1>\n      </div>\n      <div class=\"col-3 float-right\">\n        <button type=\"button\" class=\"btn btn-dark\" routerLink=\"/register\" *ngIf=\"userType\">Add New Client</button>\n        <button type=\"button\" class=\"btn btn-dark\" routerLink=\"/register\" *ngIf=\"!userType\">Add New User</button>\n      </div>\n    </div>\n    <table class=\"table table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th>Id</th>\n          <th>User Name</th>\n          <th>Email</th>\n          <th>Domain Name</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of userList; let i = index\">\n          <th>{{ i+1 }}</th>\n          <td>{{ item.userName }}</td>\n          <td>{{ item.email }}</td>\n          <td>{{ item.domainName}}</td>\n          <td>\n            <button type=\"button\" class=\"btn btn-dark mr-2\" (click)=resetPassword(item)>Edit</button>\n            <button type=\"button\" class=\"btn btn-dark mr-2\" (click)=deleteUser(i);>Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n\n</div>\n","import { Injectable, Input } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n@Injectable()\nexport class DataService {\n\n  constructor() { }\n\n  private data = '';\n\n  @Input()\n  set sharedData(name: any) {\n    this.data = name;\n  }\n\n  get sharedData(): any { return this.data; }\n\n\n  private isEedit: any;\n\n  @Input()\n  set edit(name: boolean) {\n    this.isEedit = name;\n  }\n\n  get edit(): boolean { return this.isEedit; }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private cookieService: CookieService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const currentUser = this.cookieService.get('domainName');\r\n    if (currentUser) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Response } from '../model/response.module';\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n\nexport class LoginComponent implements OnInit {\n\n  constructor(private loginService: UserService, private route: ActivatedRoute, private cookieService: CookieService,\n              private router: Router) { }\n\n  loginerror: boolean;\n  loginForm: FormGroup;\n  userType: string;\n\n  ngOnInit() {\n    this.loginerror = false;\n    this.loginForm = new FormGroup({\n      userName: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(20),\n        Validators.minLength(3)\n        // Validators.pattern(\"[a-zA-Z ]*\")\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n      ])\n\n    })\n  }\n\n  get userName() { return this.loginForm.get('userName'); }\n\n  get password() { return this.loginForm.get('password'); }\n\n\n\n  userLogin() {\n    this.userType = this.loginForm.get('userName').value === 'admin' ? 'admin' : 'client';\n    this.loginService.clientSignIn(this.loginForm)\n      .subscribe((response: Response) => {\n        if (response != null && response.result == 'success') {\n          this.cookieService.set('domainName', response.domainName);\n          this.cookieService.set('userType', this.userType);\n          this.loginerror = false;\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.loginerror = true;\n        }\n      }\n      );\n  }\n\n  loginEnter(event: any) {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      document.getElementById('loginId').click();\n    }\n  }\n}\n","<div class=\"container py-5\">\n\n  <div class=\"row\">\n    <div class=\"col-md-10 mx-auto\">\n      <form class=\"\" [formGroup]=\"loginForm\">\n        <div class=\"form-group row\">\n          <img src=\"../../assets/images/logo.png\" alt=\"\">\n        </div>\n        <div class=\"col-6 alert alert-danger mb-3\" *ngIf=\"loginerror\">\n          Username or password is incorrect\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-6\">\n            <label class=\"lb-lg text-dark\">User Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputFirstname\" placeholder=\"User Name\"\n              formControlName=\"userName\" required>\n          </div>\n          <div class=\"col-4\">\n            <div *ngIf=\" userName.invalid && (userName.dirty || userName.touched)\" class=\"alert alert-danger mt-4\">\n              <span *ngIf=\"userName.errors.required\">\n                Name is required.\n              </span>\n              <span *ngIf=\"userName.errors.minlength\">\n                Name must be at least 3 characters long.\n              </span>\n              <span *ngIf=\"userName.errors.maxlength\">\n                Name must be at least 20 characters long.\n              </span>\n              <!-- <span *ngIf=\"userName.errors.pattern\">\n                Name should not contains number.\n              </span> -->\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-6\">\n            <label class=\"lb-lg text-dark\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"\n              formControlName=\"password\" (keyup.enter)=\"loginEnter($event)\" required>\n          </div>\n          <div class=\"col-4\">\n            <div *ngIf=\" password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger mt-4\">\n              <div *ngIf=\"password.errors.required\">\n                Password is required.\n              </div>\n              <div *ngIf=\"password.errors.minlength\">\n                Password must be at least 6 characters long.\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-3\">\n            <button type=\"button\" id=\"loginId\" class=\"btn btn-dark btn-block\" (click)=userLogin()\n              [disabled]=\"loginForm.invalid\">Login</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","export class User {\n  id: number;\n  userName: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  domainName: string;\n  phone: number;\n  password: string;\n  client: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from '../model/user.model';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private loginService: UserService, private route: ActivatedRoute, private cookieService: CookieService,\n              private router: Router, private dataService: DataService) { }\n\n  get userName() { return this.registationForm.get('userName'); }\n  get password() { return this.registationForm.get('password'); }\n  get email() { return this.registationForm.get('email'); }\n  get domainName() { return this.registationForm.get('domainName'); }\n\n  registationForm: FormGroup;\n  user = new User();\n  userType = false;\n  loginerror = false;\n\n  ngOnInit(): void {\n    if (this.cookieService.get('domainName') != null) {\n      this.user.client = this.cookieService.get('domainName');\n    }\n    if (this.cookieService.get('userType') === 'admin') {\n      this.userType = true;\n    }\n    this.registationForm = new FormGroup({\n      userName: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(20),\n        Validators.minLength(3),\n        // Validators.pattern(\"[a-zA-Z ]*\")\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')\n      ]),\n      domainName: new FormControl('', [\n        Validators.required,\n      ]),\n    });\n\n    if (!this.userType) {\n      this.registationForm.get('domainName').disable();\n    }\n\n    if (this.dataService.edit) {\n      this.registationForm.get('userName').setValue(this.dataService.sharedData.userName);\n      this.registationForm.get('password').setValue(this.dataService.sharedData.password);\n      this.registationForm.get('email').setValue(this.dataService.sharedData.email);\n      this.registationForm.get('domainName').setValue(this.dataService.sharedData.domainName);\n    }\n  }\n\n  saveUser() {\n    if (this.userType) {\n      this.user.userName = this.registationForm.get('userName').value;\n      this.user.password = this.registationForm.get('password').value;\n      this.user.email = this.registationForm.get('email').value;\n      this.user.domainName = this.registationForm.get('domainName').value;\n      this.user.id = this.dataService.sharedData.id;\n      this.loginService.saveClient(this.user)\n        .subscribe((response: FormGroup) => {\n          if (response != null) {\n            this.router.navigate(['/dashboard']);\n          } else {\n            this.loginerror = true;\n          }\n        });\n    } else {\n      this.user.userName = this.registationForm.get('userName').value;\n      this.user.password = this.registationForm.get('password').value;\n      this.user.email = this.registationForm.get('email').value;\n      this.user.domainName = this.cookieService.get('domainName');\n      this.user.id = this.dataService.sharedData.id;\n      this.loginService.saveUser(this.user)\n        .subscribe((response: FormGroup) => {\n          if (response != null) {\n            this.router.navigate(['/dashboard']);\n          } else {\n            this.loginerror = true;\n          }\n        });\n    }\n    this.dataService.edit = false;\n    this.dataService.sharedData = '';\n  }\n\n  cancel() {\n    this.dataService.edit = false;\n    this.dataService.sharedData = '';\n    this.router.navigate(['/dashboard']);\n  }\n\n  logout() {\n    this.cookieService.deleteAll();\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-light bg-light\" *ngIf=\"user\">\n  <div class=\"navbar-nav\">\n    <a class=\"nav-item nav-link\" routerLink=\"/dashboard\">\n      <img src=\"../../assets/images/logo.png\" alt=\"\">\n    </a>\n\n  </div>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"nav navbar-nav ml-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-item nav-link ml-auto logout\" (click)=\"logout()\">Logout</a>\n      </li>\n\n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <form class=\"\" [formGroup]=\"registationForm\">\n    <div class=\"row\">\n      <div class=\"col-6 mb-3 input-group \">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text \" id=\"inputGroup-sizing-default\">User Name</span>\n        </div>\n        <input type=\"text\" class=\"form-control\" formControlName=\"userName\" aria-label=\"Sizing example input\"\n          aria-describedby=\"inputGroup-sizing-default\">\n      </div>\n      <div class=\"col-4\">\n        <div *ngIf=\" userName.invalid && (userName.dirty || userName.touched)\" class=\"alert alert-danger mt-1\">\n          <span *ngIf=\"userName.errors.required\">\n            Name is required.\n          </span>\n          <div *ngIf=\"userName.errors.minlength\">\n            Name must be at least 3 characters long.\n          </div>\n          <div *ngIf=\"userName.errors.maxlength\">\n            Name must be at least 20 characters long.\n          </div>\n          <!-- <div *ngIf=\"userName.errors.pattern\">\n            Name should not contains number.\n          </div> -->\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-6 mb-3 input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-default\"> Password </span>\n        </div>\n        <input type=\"password\" class=\"form-control\" formControlName=\"password\" aria-label=\"Sizing example input\"\n          aria-describedby=\"inputGroup-sizing-default\">\n      </div>\n      <div class=\"col-4\">\n        <div *ngIf=\" password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"password.errors.required\">\n            Password is required.\n          </div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters long.\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-6 mb-3 input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-default\"> Email </span>\n        </div>\n        <input type=\"text\" class=\"form-control\" formControlName=\"email\" aria-label=\"Sizing example input\"\n          aria-describedby=\"inputGroup-sizing-default\">\n      </div>\n      <div class=\"col-4\">\n        <div *ngIf=\" email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"email.errors.required\">\n            email is required.\n          </div>\n          <div *ngIf=\"email.errors.pattern\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"userType\">\n      <div class=\"col-6 mb-3 input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-default\"> Domain Name </span>\n        </div>\n        <input type=\"text\" class=\"form-control\" formControlName=\"domainName\" aria-label=\"Sizing example input\"\n          aria-describedby=\"inputGroup-sizing-default\">\n      </div>\n      <div class=\"col-4\">\n        <div *ngIf=\" domainName.invalid && (domainName.dirty || domainName.touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"domainName.errors.required\">\n            DomainName is required.\n          </div>\n        </div>\n\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <button type=\"button\" class=\"btn btn-dark btn-block\" [disabled]=\"registationForm.invalid\"\n          (click)=\"saveUser()\">submit</button>\n      </div>\n      <div class=\"col-3\">\n        <button type=\"button\" class=\"btn btn-dark btn-block\" (click)=\"cancel()\">cancel</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\nimport { User } from './model/user.model';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  userSignIn(formgroup: FormGroup) {\n    return this.http.post('api/getByUserName', formgroup.value, httpOptions);\n  }\n\n  saveUser(user: User) {\n    return this.http.put('api/saveUser', user, httpOptions);\n  }\n\n  getUserListByClient(user: User) {\n    return this.http.post('api/userListByClient', user);\n  }\n\n  clientSignIn(formgroup: FormGroup) {\n    return this.http.post('client/getByUserName', formgroup.value, httpOptions);\n  }\n\n  getAllClientList() {\n    return this.http.get('client/getAllClientList', httpOptions);\n  }\n\n  saveClient(user: User) {\n    return this.http.put('client/saveClient', user, httpOptions);\n  }\n\n  deleteUser(userId: number) {\n    return this.http.delete('api/deleteUser/' + userId, httpOptions);\n  }\n\n  deleteClientUser(userId: number) {\n    return this.http.delete('client/deleteClient/' + userId, httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}